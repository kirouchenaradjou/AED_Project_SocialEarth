/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.FinanaceManagerRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.FinanceOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Raghavi Kirouchenaradjou
 */
public class ManageWorkRequestPanel_Finance extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private FinanceOrganization organization;
    private EcoSystem system;
    private boolean flag = false;

    /**
     * Creates new form EventManager
     */
    public ManageWorkRequestPanel_Finance(JPanel userProcessContainer, UserAccount account, FinanceOrganization organization, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.organization = organization;
        this.system = system;
        populateTable();
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();

        model.setRowCount(0);
//        organization.getWorkQueue().getWorkRequestList().removeAll();

        for (WorkRequest request : organization.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[10];
            row[0] = request;
            row[1] = request.getMessage();
            row[2] = request.getEventVenue();
            row[3] = request.getUserAccount() == null ? null : request.getUserAccount().getEmployee().getName();
            row[4] = maximumAllocation();
            row[5] = request.getEventBudget();
            row[6] = request.getTransportBudget();
            row[7] = request.getDonationFromEvent();

            model.addRow(row);
        }
    }
    public Integer maximumAllocation()
    {
        int maxAllocatedAmount = (int )(Math.random() * 500 + 100);

        return maxAllocatedAmount;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        allocateEventBudgetButton = new javax.swing.JButton();
        eventBudgetTextField = new javax.swing.JTextField();
        transportBudgetTextField = new javax.swing.JTextField();
        allocateTransportBudgetButton = new javax.swing.JButton();

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request Id", "Event Name", "Event Venue", "User Name", "Maximum Allocation", "Event Organization", "Transport Organization", "Donation"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        allocateEventBudgetButton.setText("Allocate for Event Organization");
        allocateEventBudgetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allocateEventBudgetButtonActionPerformed(evt);
            }
        });

        allocateTransportBudgetButton.setText("Allocate for Transport Organization");
        allocateTransportBudgetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allocateTransportBudgetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1005, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(transportBudgetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(allocateTransportBudgetButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(eventBudgetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(allocateEventBudgetButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(410, 410, 410))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(allocateEventBudgetButton)
                    .addComponent(eventBudgetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(allocateTransportBudgetButton)
                    .addComponent(transportBudgetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(374, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void allocateEventBudgetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allocateEventBudgetButtonActionPerformed
        // TODO add your handling code here:
         int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0) {
            return;
        }

        WorkRequest request = (WorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
        request.setEventBudget(Integer.parseInt(eventBudgetTextField.getText()));
        populateTable();
    }//GEN-LAST:event_allocateEventBudgetButtonActionPerformed

    private void allocateTransportBudgetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allocateTransportBudgetButtonActionPerformed
        // TODO add your handling code here:
          int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0) {
            return;
        }

        WorkRequest request = (WorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
        request.setTransportBudget(Integer.parseInt(transportBudgetTextField.getText()));
        populateTable();
    }//GEN-LAST:event_allocateTransportBudgetButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton allocateEventBudgetButton;
    private javax.swing.JButton allocateTransportBudgetButton;
    private javax.swing.JTextField eventBudgetTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField transportBudgetTextField;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
