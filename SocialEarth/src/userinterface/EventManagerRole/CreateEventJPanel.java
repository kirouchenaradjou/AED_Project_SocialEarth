/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.EventManagerRole;

import Business.EcoSystem;
import Business.Event.Event;
import Business.Network.Network;
import Business.Zone.Zone;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Divya Priya Emmanuel
 */
public class CreateEventJPanel extends javax.swing.JPanel {

    /**
     * Creates new form EventJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem system;

    public CreateEventJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        initializeFields();
        populateNetworkComboBox();
    }

    public void initializeFields() {
        ManagerEventDate.setMinSelectableDate(new Date());
        ManagerEventRegStartDate.setMinSelectableDate(new Date());
        ManagerEventRegEndDate.setMinSelectableDate(new Date());
    }

    public void populateNetworkComboBox() {
        networkComboBox.removeAllItems();
        for (Network eachNetwork : system.getNetworkDirectory().getNetworkList()) {
            networkComboBox.addItem(eachNetwork);
        }
    }

    public void populateZoneComboBox(Network selectedNetwork) {
        zoneComboBox.removeAllItems();
        for (Zone eachZone : selectedNetwork.getZoneDirectory().getZoneList()) {
            zoneComboBox.addItem(eachZone);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ManagerEventNameTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        ManagerEventVenueTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        MaxAlloSpinner = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        NoTransportRadioBtn = new javax.swing.JRadioButton();
        YesTransportRadioBtn = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        ManagerCreateEventBtn = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        networkComboBox = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        zoneComboBox = new javax.swing.JComboBox();
        ManagerEventDate = new com.toedter.calendar.JDateChooser();
        ManagerEventRegStartDate = new com.toedter.calendar.JDateChooser();
        ManagerEventRegEndDate = new com.toedter.calendar.JDateChooser();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Create an event");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 80, 280, -1));

        jLabel2.setText("Event name");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 120, 90, -1));
        add(ManagerEventNameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 120, 160, -1));

        jLabel4.setText("Venue");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 260, 90, -1));
        add(ManagerEventVenueTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 260, 187, -1));

        jLabel5.setText("Event date");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 306, 90, -1));

        jLabel7.setText("Availibility of Transport");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 410, 120, 20));
        add(MaxAlloSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 350, 160, 30));

        jLabel8.setText("Maximum Allocation");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 360, 100, 20));

        buttonGroup1.add(NoTransportRadioBtn);
        NoTransportRadioBtn.setSelected(true);
        NoTransportRadioBtn.setText("No");
        add(NoTransportRadioBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 420, -1, 20));

        buttonGroup1.add(YesTransportRadioBtn);
        YesTransportRadioBtn.setText("Yes");
        add(YesTransportRadioBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 420, -1, 20));

        jLabel9.setText("Registration start date");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 470, 170, 20));

        jLabel10.setText("Registration end date");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 520, 110, 20));

        ManagerCreateEventBtn.setText("Create Event");
        ManagerCreateEventBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ManagerCreateEventBtnActionPerformed(evt);
            }
        });
        add(ManagerCreateEventBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 638, -1, -1));

        jLabel11.setText("Network");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 167, 90, -1));

        networkComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkComboBoxActionPerformed(evt);
            }
        });
        add(networkComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 164, 160, -1));

        jLabel12.setText("Zone");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 219, 90, -1));

        add(zoneComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 216, 160, -1));
        add(ManagerEventDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 300, 190, -1));
        add(ManagerEventRegStartDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 470, 190, 20));
        add(ManagerEventRegEndDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 520, 190, 20));
    }// </editor-fold>//GEN-END:initComponents

    private void ManagerCreateEventBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ManagerCreateEventBtnActionPerformed
        // TODO add your handling code here:
        String eventName = ManagerEventNameTxt.getText();
        if (eventName.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Event name cannot be empty!", "Warning!", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Network selectedNetwork = (Network) networkComboBox.getSelectedItem();
        Zone selectedZone = (Zone) zoneComboBox.getSelectedItem();
        String venueName = ManagerEventVenueTxt.getText();
        if (venueName.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Venue cannot be empty!", "Warning!", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Date eventDate = ManagerEventDate.getDate();
        int maxAllowed = (int) MaxAlloSpinner.getValue();
        if (maxAllowed <= 0) {
            JOptionPane.showMessageDialog(null, "Max allowed members should be positive and non zero!", "Warning!", JOptionPane.WARNING_MESSAGE);
            return;
        }
        boolean isTransportAvail = YesTransportRadioBtn.isEnabled();
        Date eventRegStartDate = ManagerEventRegStartDate.getDate();
        Date eventRegEndDate = ManagerEventRegEndDate.getDate();
        Event newEvent = system.getEventDirectory().createAndAddEvent(eventName, selectedNetwork,
                selectedZone, venueName, eventDate, maxAllowed,
                isTransportAvail, eventRegStartDate, eventRegEndDate);
        newEvent.setEventName(eventName);
    }//GEN-LAST:event_ManagerCreateEventBtnActionPerformed

    private void networkComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networkComboBoxActionPerformed
        // TODO add your handling code here:
        populateZoneComboBox((Network) networkComboBox.getSelectedItem());
    }//GEN-LAST:event_networkComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ManagerCreateEventBtn;
    private com.toedter.calendar.JDateChooser ManagerEventDate;
    private javax.swing.JTextField ManagerEventNameTxt;
    private com.toedter.calendar.JDateChooser ManagerEventRegEndDate;
    private com.toedter.calendar.JDateChooser ManagerEventRegStartDate;
    private javax.swing.JTextField ManagerEventVenueTxt;
    private javax.swing.JSpinner MaxAlloSpinner;
    private javax.swing.JRadioButton NoTransportRadioBtn;
    private javax.swing.JRadioButton YesTransportRadioBtn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox networkComboBox;
    private javax.swing.JComboBox zoneComboBox;
    // End of variables declaration//GEN-END:variables
}
